// --------------------- FileHeader --------------------------
	// All file header info is kept as is (unless offset/size attributes)
	// The original header flags is not complete, thus discarded. 
	// 	.headerflags	@"EF_CUDA_TEXMODE_UNIFIED EF_CUDA_64BIT_ADDRESS EF_CUDA_SM86 EF_CUDA_VIRTUAL_SM(EF_CUDA_SM86)"
	// 	.elftype	@"ET_EXEC"
	// 
	// 
	.__elf_ident_osabi      51
	.__elf_ident_abiversion 7
	.__elf_type             ET_EXEC
	.__elf_machine          EM_CUDA
	.__elf_version          123 		// CUDA toolkit version 
	.__elf_entry            0 		// entry point address 
	.__elf_phoff            0x18c0 		// program header offset, maybe updated by assembler
	.__elf_shoff            0x1480 		// section header offset, maybe updated by assembler
	.__elf_flags            0x560556 		// Flags, SM_86(0x56), COMPUTE_86(0x56) 
	.__elf_ehsize           64 		// elf header size 
	.__elf_phentsize        56 		// program entry size
	.__elf_phnum            4 		// number of program entries
	.__elf_shentsize        64 		// section entry size
	.__elf_shnum            17 		// number of sections, currently no sections can be appended/removed
	.__elf_shstrndx         1 		// Section name string table index 


  //-------------------------------------------------
  //------------ END of FileHeader ------------------
  //-------------------------------------------------



// ---------------------                                  --------------------------
	// there will always be an empty section at index 0
	.section  "", 0, SHT_NULL
	.__section_name         0x0 	// offset in .shstrtab
	.__section_type         SHT_NULL
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x0 	// maybe updated by assembler
	.__section_size         0x0 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                0 	// equivalent to set sh_addralign

// --------------------- .shstrtab                        --------------------------
	.section  ".shstrtab", 0, SHT_STRTAB
	// all strings in .shstrtab section will be kept as is.
	.__section_name         0x1 	// offset in .shstrtab
	.__section_type         SHT_STRTAB
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x40 	// maybe updated by assembler
	.__section_size         0x1e5 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                1 	// equivalent to set sh_addralign
    // .shstrtab[0] = b'\x00' 
    /*0000*/ .byte 0x00

    // .shstrtab[1] = b'.shstrtab\x00' 
    /*0001*/ .byte 0x2e, 0x73, 0x68, 0x73, 0x74, 0x72, 0x74, 0x61
    /*0009*/ .byte 0x62, 0x00

    // .shstrtab[2] = b'.strtab\x00' 
    /*000b*/ .byte 0x2e, 0x73, 0x74, 0x72, 0x74, 0x61, 0x62, 0x00

    // .shstrtab[3] = b'.symtab\x00' 
    /*0013*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x00

    // .shstrtab[4] = b'.symtab_shndx\x00' 
    /*001b*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x5f
    /*0023*/ .byte 0x73, 0x68, 0x6e, 0x64, 0x78, 0x00

    // .shstrtab[5] = b'.nv.uft.entry\x00' 
    /*0029*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x75, 0x66, 0x74, 0x2e
    /*0031*/ .byte 0x65, 0x6e, 0x74, 0x72, 0x79, 0x00

    // .shstrtab[6] = b'.nv.info\x00' 
    /*0037*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*003f*/ .byte 0x00

    // .shstrtab[7] = b'.text._Z16kernelLargeParam13param_large_tPi\x00' 
    /*0040*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*0048*/ .byte 0x31, 0x36, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*0050*/ .byte 0x4c, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x72
    /*0058*/ .byte 0x61, 0x6d, 0x31, 0x33, 0x70, 0x61, 0x72, 0x61
    /*0060*/ .byte 0x6d, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f
    /*0068*/ .byte 0x74, 0x50, 0x69, 0x00

    // .shstrtab[8] = b'.nv.info._Z16kernelLargeParam13param_large_tPi\x00' 
    /*006c*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*0074*/ .byte 0x2e, 0x5f, 0x5a, 0x31, 0x36, 0x6b, 0x65, 0x72
    /*007c*/ .byte 0x6e, 0x65, 0x6c, 0x4c, 0x61, 0x72, 0x67, 0x65
    /*0084*/ .byte 0x50, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x33, 0x70
    /*008c*/ .byte 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x61, 0x72
    /*0094*/ .byte 0x67, 0x65, 0x5f, 0x74, 0x50, 0x69, 0x00

    // .shstrtab[9] = b'.nv.shared._Z16kernelLargeParam13param_large_tPi\x00' 
    /*009b*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*00a3*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x31, 0x36, 0x6b
    /*00ab*/ .byte 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4c, 0x61, 0x72
    /*00b3*/ .byte 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x31
    /*00bb*/ .byte 0x33, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c
    /*00c3*/ .byte 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x50, 0x69
    /*00cb*/ .byte 0x00

    // .shstrtab[10] = b'.nv.constant3\x00' 
    /*00cc*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*00d4*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x33, 0x00

    // .shstrtab[11] = b'.nv.constant0._Z16kernelLargeParam13param_large_tPi\x00' 
    /*00da*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*00e2*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*00ea*/ .byte 0x31, 0x36, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*00f2*/ .byte 0x4c, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x72
    /*00fa*/ .byte 0x61, 0x6d, 0x31, 0x33, 0x70, 0x61, 0x72, 0x61
    /*0102*/ .byte 0x6d, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f
    /*010a*/ .byte 0x74, 0x50, 0x69, 0x00

    // .shstrtab[12] = b'.text._Z13kernelDefault7param_tPi\x00' 
    /*010e*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*0116*/ .byte 0x31, 0x33, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*011e*/ .byte 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x37
    /*0126*/ .byte 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x50
    /*012e*/ .byte 0x69, 0x00

    // .shstrtab[13] = b'.nv.info._Z13kernelDefault7param_tPi\x00' 
    /*0130*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*0138*/ .byte 0x2e, 0x5f, 0x5a, 0x31, 0x33, 0x6b, 0x65, 0x72
    /*0140*/ .byte 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75
    /*0148*/ .byte 0x6c, 0x74, 0x37, 0x70, 0x61, 0x72, 0x61, 0x6d
    /*0150*/ .byte 0x5f, 0x74, 0x50, 0x69, 0x00

    // .shstrtab[14] = b'.nv.shared._Z13kernelDefault7param_tPi\x00' 
    /*0155*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*015d*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x31, 0x33, 0x6b
    /*0165*/ .byte 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66
    /*016d*/ .byte 0x61, 0x75, 0x6c, 0x74, 0x37, 0x70, 0x61, 0x72
    /*0175*/ .byte 0x61, 0x6d, 0x5f, 0x74, 0x50, 0x69, 0x00

    // .shstrtab[15] = b'.nv.constant0._Z13kernelDefault7param_tPi\x00' 
    /*017c*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*0184*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*018c*/ .byte 0x31, 0x33, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*0194*/ .byte 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x37
    /*019c*/ .byte 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x50
    /*01a4*/ .byte 0x69, 0x00

    // .shstrtab[16] = b'.debug_frame\x00' 
    /*01a6*/ .byte 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x66
    /*01ae*/ .byte 0x72, 0x61, 0x6d, 0x65, 0x00

    // .shstrtab[17] = b'.rel.debug_frame\x00' 
    /*01b3*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x2e, 0x64, 0x65, 0x62
    /*01bb*/ .byte 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65
    /*01c3*/ .byte 0x00

    // .shstrtab[18] = b'.rela.debug_frame\x00' 
    /*01c4*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x2e, 0x64, 0x65
    /*01cc*/ .byte 0x62, 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d
    /*01d4*/ .byte 0x65, 0x00

    // .shstrtab[19] = b'.nv.rel.action\x00' 
    /*01d6*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x72, 0x65, 0x6c, 0x2e
    /*01de*/ .byte 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00


// --------------------- .strtab                          --------------------------
	.section  ".strtab", 0, SHT_STRTAB
	// all strings in .strtab section will be kept as is.
	.__section_name         0xb 	// offset in .shstrtab
	.__section_type         SHT_STRTAB
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x225 	// maybe updated by assembler
	.__section_size         0x29e 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                1 	// equivalent to set sh_addralign
    // .strtab[0] = b'\x00' 
    /*0000*/ .byte 0x00

    // .strtab[1] = b'.shstrtab\x00' 
    /*0001*/ .byte 0x2e, 0x73, 0x68, 0x73, 0x74, 0x72, 0x74, 0x61
    /*0009*/ .byte 0x62, 0x00

    // .strtab[2] = b'.strtab\x00' 
    /*000b*/ .byte 0x2e, 0x73, 0x74, 0x72, 0x74, 0x61, 0x62, 0x00

    // .strtab[3] = b'.symtab\x00' 
    /*0013*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x00

    // .strtab[4] = b'.symtab_shndx\x00' 
    /*001b*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x5f
    /*0023*/ .byte 0x73, 0x68, 0x6e, 0x64, 0x78, 0x00

    // .strtab[5] = b'.nv.uft.entry\x00' 
    /*0029*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x75, 0x66, 0x74, 0x2e
    /*0031*/ .byte 0x65, 0x6e, 0x74, 0x72, 0x79, 0x00

    // .strtab[6] = b'.nv.info\x00' 
    /*0037*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*003f*/ .byte 0x00

    // .strtab[7] = b'_Z16kernelLargeParam13param_large_tPi\x00' 
    /*0040*/ .byte 0x5f, 0x5a, 0x31, 0x36, 0x6b, 0x65, 0x72, 0x6e
    /*0048*/ .byte 0x65, 0x6c, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x50
    /*0050*/ .byte 0x61, 0x72, 0x61, 0x6d, 0x31, 0x33, 0x70, 0x61
    /*0058*/ .byte 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x61, 0x72, 0x67
    /*0060*/ .byte 0x65, 0x5f, 0x74, 0x50, 0x69, 0x00

    // .strtab[8] = b'.text._Z16kernelLargeParam13param_large_tPi\x00' 
    /*0066*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*006e*/ .byte 0x31, 0x36, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*0076*/ .byte 0x4c, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x72
    /*007e*/ .byte 0x61, 0x6d, 0x31, 0x33, 0x70, 0x61, 0x72, 0x61
    /*0086*/ .byte 0x6d, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f
    /*008e*/ .byte 0x74, 0x50, 0x69, 0x00

    // .strtab[9] = b'.nv.info._Z16kernelLargeParam13param_large_tPi\x00' 
    /*0092*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*009a*/ .byte 0x2e, 0x5f, 0x5a, 0x31, 0x36, 0x6b, 0x65, 0x72
    /*00a2*/ .byte 0x6e, 0x65, 0x6c, 0x4c, 0x61, 0x72, 0x67, 0x65
    /*00aa*/ .byte 0x50, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x33, 0x70
    /*00b2*/ .byte 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x61, 0x72
    /*00ba*/ .byte 0x67, 0x65, 0x5f, 0x74, 0x50, 0x69, 0x00

    // .strtab[10] = b'.nv.shared._Z16kernelLargeParam13param_large_tPi\x00' 
    /*00c1*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*00c9*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x31, 0x36, 0x6b
    /*00d1*/ .byte 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4c, 0x61, 0x72
    /*00d9*/ .byte 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x31
    /*00e1*/ .byte 0x33, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c
    /*00e9*/ .byte 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x50, 0x69
    /*00f1*/ .byte 0x00

    // .strtab[11] = b'.nv.constant3\x00' 
    /*00f2*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*00fa*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x33, 0x00

    // .strtab[12] = b'excess_params\x00' 
    /*0100*/ .byte 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70
    /*0108*/ .byte 0x61, 0x72, 0x61, 0x6d, 0x73, 0x00

    // .strtab[13] = b'$_Z16kernelLargeParam13param_large_tPi$sharedData_$_0\x00' 
    /*010e*/ .byte 0x24, 0x5f, 0x5a, 0x31, 0x36, 0x6b, 0x65, 0x72
    /*0116*/ .byte 0x6e, 0x65, 0x6c, 0x4c, 0x61, 0x72, 0x67, 0x65
    /*011e*/ .byte 0x50, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x33, 0x70
    /*0126*/ .byte 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x61, 0x72
    /*012e*/ .byte 0x67, 0x65, 0x5f, 0x74, 0x50, 0x69, 0x24, 0x73
    /*0136*/ .byte 0x68, 0x61, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74
    /*013e*/ .byte 0x61, 0x5f, 0x24, 0x5f, 0x30, 0x00

    // .strtab[14] = b'.nv.constant0._Z16kernelLargeParam13param_large_tPi\x00' 
    /*0144*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*014c*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*0154*/ .byte 0x31, 0x36, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*015c*/ .byte 0x4c, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x72
    /*0164*/ .byte 0x61, 0x6d, 0x31, 0x33, 0x70, 0x61, 0x72, 0x61
    /*016c*/ .byte 0x6d, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f
    /*0174*/ .byte 0x74, 0x50, 0x69, 0x00

    // .strtab[15] = b'_param\x00' 
    /*0178*/ .byte 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x00

    // .strtab[16] = b'_Z13kernelDefault7param_tPi\x00' 
    /*017f*/ .byte 0x5f, 0x5a, 0x31, 0x33, 0x6b, 0x65, 0x72, 0x6e
    /*0187*/ .byte 0x65, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c
    /*018f*/ .byte 0x74, 0x37, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f
    /*0197*/ .byte 0x74, 0x50, 0x69, 0x00

    // .strtab[17] = b'.text._Z13kernelDefault7param_tPi\x00' 
    /*019b*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*01a3*/ .byte 0x31, 0x33, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*01ab*/ .byte 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x37
    /*01b3*/ .byte 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x50
    /*01bb*/ .byte 0x69, 0x00

    // .strtab[18] = b'.nv.info._Z13kernelDefault7param_tPi\x00' 
    /*01bd*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*01c5*/ .byte 0x2e, 0x5f, 0x5a, 0x31, 0x33, 0x6b, 0x65, 0x72
    /*01cd*/ .byte 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75
    /*01d5*/ .byte 0x6c, 0x74, 0x37, 0x70, 0x61, 0x72, 0x61, 0x6d
    /*01dd*/ .byte 0x5f, 0x74, 0x50, 0x69, 0x00

    // .strtab[19] = b'.nv.shared._Z13kernelDefault7param_tPi\x00' 
    /*01e2*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*01ea*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x31, 0x33, 0x6b
    /*01f2*/ .byte 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66
    /*01fa*/ .byte 0x61, 0x75, 0x6c, 0x74, 0x37, 0x70, 0x61, 0x72
    /*0202*/ .byte 0x61, 0x6d, 0x5f, 0x74, 0x50, 0x69, 0x00

    // .strtab[20] = b'$_Z13kernelDefault7param_tPi$sharedData_$_0\x00' 
    /*0209*/ .byte 0x24, 0x5f, 0x5a, 0x31, 0x33, 0x6b, 0x65, 0x72
    /*0211*/ .byte 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75
    /*0219*/ .byte 0x6c, 0x74, 0x37, 0x70, 0x61, 0x72, 0x61, 0x6d
    /*0221*/ .byte 0x5f, 0x74, 0x50, 0x69, 0x24, 0x73, 0x68, 0x61
    /*0229*/ .byte 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x5f
    /*0231*/ .byte 0x24, 0x5f, 0x30, 0x00

    // .strtab[21] = b'.nv.constant0._Z13kernelDefault7param_tPi\x00' 
    /*0235*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*023d*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*0245*/ .byte 0x31, 0x33, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c
    /*024d*/ .byte 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x37
    /*0255*/ .byte 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x50
    /*025d*/ .byte 0x69, 0x00

    // .strtab[22] = b'.debug_frame\x00' 
    /*025f*/ .byte 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x66
    /*0267*/ .byte 0x72, 0x61, 0x6d, 0x65, 0x00

    // .strtab[23] = b'.rel.debug_frame\x00' 
    /*026c*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x2e, 0x64, 0x65, 0x62
    /*0274*/ .byte 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65
    /*027c*/ .byte 0x00

    // .strtab[24] = b'.rela.debug_frame\x00' 
    /*027d*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x2e, 0x64, 0x65
    /*0285*/ .byte 0x62, 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d
    /*028d*/ .byte 0x65, 0x00

    // .strtab[25] = b'.nv.rel.action\x00' 
    /*028f*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x72, 0x65, 0x6c, 0x2e
    /*0297*/ .byte 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00


// --------------------- .symtab                          --------------------------
	.section  ".symtab", 0, SHT_SYMTAB
	// all symbols in .symtab sections will be kept
	// but the symbol size may be changed accordingly
	.__section_name         0x13 	// offset in .shstrtab
	.__section_type         SHT_SYMTAB
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x4c8 	// maybe updated by assembler
	.__section_size         0x138 	// maybe updated by assembler
	.__section_link         2
	.__section_info         0xb
	.__section_entsize      24
	.align                8 	// equivalent to set sh_addralign
    // Symbol[0] "": Container({'st_name': 0, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_NOTYPE'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 'SHN_UNDEF', 'st_value': 0, 'st_size': 0})
    /*0000*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0008*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0010*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[1] ".text._Z16kernelLargeParam13param_large_tPi": Container({'st_name': 102, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 13, 'st_value': 0, 'st_size': 0})
    /*0018*/ .byte 0x66, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0d, 0x00
    /*0020*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0028*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[2] ".nv.shared._Z16kernelLargeParam13param_large_tPi": Container({'st_name': 193, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 15, 'st_value': 0, 'st_size': 0})
    /*0030*/ .byte 0xc1, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0f, 0x00
    /*0038*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0040*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[3] ".nv.constant3": Container({'st_name': 242, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 10, 'st_value': 0, 'st_size': 0})
    /*0048*/ .byte 0xf2, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0a, 0x00
    /*0050*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0058*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[4] "excess_params": Container({'st_name': 256, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_OBJECT'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 10, 'st_value': 0, 'st_size': 40})
    /*0060*/ .byte 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x00
    /*0068*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0070*/ .byte 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[5] ".nv.constant0._Z16kernelLargeParam13param_large_tPi": Container({'st_name': 324, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 11, 'st_value': 0, 'st_size': 0})
    /*0078*/ .byte 0x44, 0x01, 0x00, 0x00, 0x03, 0x00, 0x0b, 0x00
    /*0080*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0088*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[6] ".text._Z13kernelDefault7param_tPi": Container({'st_name': 411, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 14, 'st_value': 0, 'st_size': 0})
    /*0090*/ .byte 0x9b, 0x01, 0x00, 0x00, 0x03, 0x00, 0x0e, 0x00
    /*0098*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*00a0*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[7] ".nv.shared._Z13kernelDefault7param_tPi": Container({'st_name': 482, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 16, 'st_value': 0, 'st_size': 0})
    /*00a8*/ .byte 0xe2, 0x01, 0x00, 0x00, 0x03, 0x00, 0x10, 0x00
    /*00b0*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*00b8*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[8] ".nv.constant0._Z13kernelDefault7param_tPi": Container({'st_name': 565, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 12, 'st_value': 0, 'st_size': 0})
    /*00c0*/ .byte 0x35, 0x02, 0x00, 0x00, 0x03, 0x00, 0x0c, 0x00
    /*00c8*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*00d0*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[9] ".debug_frame": Container({'st_name': 607, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 4, 'st_value': 0, 'st_size': 0})
    /*00d8*/ .byte 0x5f, 0x02, 0x00, 0x00, 0x03, 0x00, 0x04, 0x00
    /*00e0*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*00e8*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[10] ".nv.rel.action": Container({'st_name': 655, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 8, 'st_value': 0, 'st_size': 0})
    /*00f0*/ .byte 0x8f, 0x02, 0x00, 0x00, 0x03, 0x00, 0x08, 0x00
    /*00f8*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0100*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[11] "_Z16kernelLargeParam13param_large_tPi": Container({'st_name': 64, 'st_info': Container({'bind': 'STB_GLOBAL', 'type': 'STT_FUNC'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 13, 'st_value': 0, 'st_size': 1280})
    /*0108*/ .byte 0x40, 0x00, 0x00, 0x00, 0x12, 0x10, 0x0d, 0x00
    /*0110*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0118*/ .byte 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[12] "_Z13kernelDefault7param_tPi": Container({'st_name': 383, 'st_info': Container({'bind': 'STB_GLOBAL', 'type': 'STT_FUNC'}), 'st_other': Container({'visibility': 'STV_DEFAULT'}), 'st_shndx': 14, 'st_value': 0, 'st_size': 768})
    /*0120*/ .byte 0x7f, 0x01, 0x00, 0x00, 0x12, 0x10, 0x0e, 0x00
    /*0128*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0130*/ .byte 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00


// --------------------- .debug_frame                     --------------------------
	.section	.debug_frame,"",@progbits
	.__section_name         0x1a6 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x600 	// maybe updated by assembler
	.__section_size         0xe0 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                1 	// equivalent to set sh_addralign
  .debug_frame:
          /*0000*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff
          /*0010*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x04, 0x7c, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0c, 0x81, 0x80
          /*0020*/ 	.byte	0x80, 0x28, 0x00, 0x08, 0xff, 0x81, 0x80, 0x28, 0x08, 0x81, 0x80, 0x80, 0x28, 0x00, 0x00, 0x00
          /*0030*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*0040*/ 	.byte	0x00, 0x00, 0x00, 0x00
          /*0044*/ 	.dword	_Z16kernelLargeParam13param_large_tPi
          /*004c*/ 	.byte	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x04, 0x0c, 0x00
          /*005c*/ 	.byte	0x00, 0x00, 0x0c, 0x81, 0x80, 0x80, 0x28, 0x00, 0x04, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*006c*/ 	.byte	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*007c*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x04, 0x7c, 0xff, 0xff, 0xff, 0xff
          /*008c*/ 	.byte	0x0f, 0x0c, 0x81, 0x80, 0x80, 0x28, 0x00, 0x08, 0xff, 0x81, 0x80, 0x28, 0x08, 0x81, 0x80, 0x80
          /*009c*/ 	.byte	0x28, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*00ac*/ 	.byte	0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*00b4*/ 	.dword	_Z13kernelDefault7param_tPi
          /*00bc*/ 	.byte	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x04, 0x0c, 0x00
          /*00cc*/ 	.byte	0x00, 0x00, 0x0c, 0x81, 0x80, 0x80, 0x28, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*00dc*/ 	.byte	0x00, 0x00, 0x00, 0x00
  
  
// --------------------- .nv.info                         --------------------------
	.section	.nv.info,"",@"SHT_CUDA_INFO"
	.__section_name         0x37 	// offset in .shstrtab
	.__section_type         1879048192
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x6e0 	// maybe updated by assembler
	.__section_size         0x60 	// maybe updated by assembler
	.__section_link         3
	.__section_info         0x0
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  
  
  	//----- nvinfo : EIATTR_REGCOUNT
  	.align		4
          /*0000*/ 	.byte	0x04, 0x2f
          /*0002*/ 	.short	(.L_2 - .L_1)
  	.align		4
  .L_1:
          /*0004*/ 	.word	index@(_Z13kernelDefault7param_tPi)
          /*0008*/ 	.word	0x0000000c
  
  
  	//----- nvinfo : EIATTR_MAX_STACK_SIZE
  	.align		4
  .L_2:
          /*000c*/ 	.byte	0x04, 0x23
          /*000e*/ 	.short	(.L_4 - .L_3)
  	.align		4
  .L_3:
          /*0010*/ 	.word	index@(_Z13kernelDefault7param_tPi)
          /*0014*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_MIN_STACK_SIZE
  	.align		4
  .L_4:
          /*0018*/ 	.byte	0x04, 0x12
          /*001a*/ 	.short	(.L_6 - .L_5)
  	.align		4
  .L_5:
          /*001c*/ 	.word	index@(_Z13kernelDefault7param_tPi)
          /*0020*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_FRAME_SIZE
  	.align		4
  .L_6:
          /*0024*/ 	.byte	0x04, 0x11
          /*0026*/ 	.short	(.L_8 - .L_7)
  	.align		4
  .L_7:
          /*0028*/ 	.word	index@(_Z13kernelDefault7param_tPi)
          /*002c*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_REGCOUNT
  	.align		4
  .L_8:
          /*0030*/ 	.byte	0x04, 0x2f
          /*0032*/ 	.short	(.L_10 - .L_9)
  	.align		4
  .L_9:
          /*0034*/ 	.word	index@(_Z16kernelLargeParam13param_large_tPi)
          /*0038*/ 	.word	0x0000000a
  
  
  	//----- nvinfo : EIATTR_MAX_STACK_SIZE
  	.align		4
  .L_10:
          /*003c*/ 	.byte	0x04, 0x23
          /*003e*/ 	.short	(.L_12 - .L_11)
  	.align		4
  .L_11:
          /*0040*/ 	.word	index@(_Z16kernelLargeParam13param_large_tPi)
          /*0044*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_MIN_STACK_SIZE
  	.align		4
  .L_12:
          /*0048*/ 	.byte	0x04, 0x12
          /*004a*/ 	.short	(.L_14 - .L_13)
  	.align		4
  .L_13:
          /*004c*/ 	.word	index@(_Z16kernelLargeParam13param_large_tPi)
          /*0050*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_FRAME_SIZE
  	.align		4
  .L_14:
          /*0054*/ 	.byte	0x04, 0x11
          /*0056*/ 	.short	(.L_16 - .L_15)
  	.align		4
  .L_15:
          /*0058*/ 	.word	index@(_Z16kernelLargeParam13param_large_tPi)
          /*005c*/ 	.word	0x00000000
  .L_16:
  
  
// --------------------- .nv.info._Z16kernelLargeParam13param_large_tPi --------------------------
	.section	.nv.info._Z16kernelLargeParam13param_large_tPi,"",@"SHT_CUDA_INFO"
	.__section_name         0x6c 	// offset in .shstrtab
	.__section_type         1879048192
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x740 	// maybe updated by assembler
	.__section_size         0x54 	// maybe updated by assembler
	.__section_link         3
	.__section_info         0xd
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  
  
  	//----- nvinfo : EIATTR_CUDA_API_VERSION
  	.align		4
          /*0000*/ 	.byte	0x04, 0x37
          /*0002*/ 	.short	(.L_18 - .L_17)
  .L_17:
          /*0004*/ 	.word	0x0000007b
  
  
  	//----- nvinfo : EIATTR_SW2861232_WAR
  	.align		4
  .L_18:
          /*0008*/ 	.byte	0x01, 0x35
  	.zero		2
  
  
  	//----- nvinfo : EIATTR_PARAM_CBANK
  	.align		4
          /*000c*/ 	.byte	0x04, 0x0a
          /*000e*/ 	.short	(.L_20 - .L_19)
  	.align		4
  .L_19:
          /*0010*/ 	.word	index@(.nv.constant0._Z16kernelLargeParam13param_large_tPi)
          /*0014*/ 	.short	0x0160
          /*0016*/ 	.short	0x00a8
  
  
  	//----- nvinfo : EIATTR_CBANK_PARAM_SIZE
  	.align		4
  .L_20:
          /*0018*/ 	.byte	0x03, 0x19
          /*001a*/ 	.short	0x00a8
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
          /*001c*/ 	.byte	0x04, 0x17
          /*001e*/ 	.short	(.L_22 - .L_21)
  .L_21:
          /*0020*/ 	.word	0x00000000
          /*0024*/ 	.short	0x0001
          /*0026*/ 	.short	0x00a0
          /*0028*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
  .L_22:
          /*002c*/ 	.byte	0x04, 0x17
          /*002e*/ 	.short	(.L_24 - .L_23)
  .L_23:
          /*0030*/ 	.word	0x00000000
          /*0034*/ 	.short	0x0000
          /*0036*/ 	.short	0x0000
          /*0038*/ 	.byte	0x00, 0xf0, 0x81, 0x02
  
  
  	//----- nvinfo : EIATTR_MAXREG_COUNT
  	.align		4
  .L_24:
          /*003c*/ 	.byte	0x03, 0x1b
          /*003e*/ 	.short	0x00ff
  
  
  	//----- nvinfo : EIATTR_EXIT_INSTR_OFFSETS
  	.align		4
          /*0040*/ 	.byte	0x04, 0x1c
          /*0042*/ 	.short	(.L_26 - .L_25)
  
  
  	//   ....[0]....
  .L_25:
          /*0044*/ 	.word	0x00000030
  
  
  	//   ....[1]....
          /*0048*/ 	.word	0x00000410
  
  
  	//----- nvinfo : EIATTR_CRS_STACK_SIZE
  	.align		4
  .L_26:
          /*004c*/ 	.byte	0x04, 0x1e
          /*004e*/ 	.short	(.L_28 - .L_27)
  .L_27:
          /*0050*/ 	.word	0x00000000
  .L_28:
  
  
// --------------------- .nv.info._Z13kernelDefault7param_tPi --------------------------
	.section	.nv.info._Z13kernelDefault7param_tPi,"",@"SHT_CUDA_INFO"
	.__section_name         0x130 	// offset in .shstrtab
	.__section_type         1879048192
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x794 	// maybe updated by assembler
	.__section_size         0x4c 	// maybe updated by assembler
	.__section_link         3
	.__section_info         0xe
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  
  
  	//----- nvinfo : EIATTR_CUDA_API_VERSION
  	.align		4
          /*0000*/ 	.byte	0x04, 0x37
          /*0002*/ 	.short	(.L_30 - .L_29)
  .L_29:
          /*0004*/ 	.word	0x0000007b
  
  
  	//----- nvinfo : EIATTR_SW2861232_WAR
  	.align		4
  .L_30:
          /*0008*/ 	.byte	0x01, 0x35
  	.zero		2
  
  
  	//----- nvinfo : EIATTR_PARAM_CBANK
  	.align		4
          /*000c*/ 	.byte	0x04, 0x0a
          /*000e*/ 	.short	(.L_32 - .L_31)
  	.align		4
  .L_31:
          /*0010*/ 	.word	index@(.nv.constant0._Z13kernelDefault7param_tPi)
          /*0014*/ 	.short	0x0160
          /*0016*/ 	.short	0x0080
  
  
  	//----- nvinfo : EIATTR_CBANK_PARAM_SIZE
  	.align		4
  .L_32:
          /*0018*/ 	.byte	0x03, 0x19
          /*001a*/ 	.short	0x0080
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
          /*001c*/ 	.byte	0x04, 0x17
          /*001e*/ 	.short	(.L_34 - .L_33)
  .L_33:
          /*0020*/ 	.word	0x00000000
          /*0024*/ 	.short	0x0001
          /*0026*/ 	.short	0x0078
          /*0028*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
  .L_34:
          /*002c*/ 	.byte	0x04, 0x17
          /*002e*/ 	.short	(.L_36 - .L_35)
  .L_35:
          /*0030*/ 	.word	0x00000000
          /*0034*/ 	.short	0x0000
          /*0036*/ 	.short	0x0000
          /*0038*/ 	.byte	0x00, 0xf0, 0xe1, 0x01
  
  
  	//----- nvinfo : EIATTR_MAXREG_COUNT
  	.align		4
  .L_36:
          /*003c*/ 	.byte	0x03, 0x1b
          /*003e*/ 	.short	0x00ff
  
  
  	//----- nvinfo : EIATTR_EXIT_INSTR_OFFSETS
  	.align		4
          /*0040*/ 	.byte	0x04, 0x1c
          /*0042*/ 	.short	(.L_38 - .L_37)
  
  
  	//   ....[0]....
  .L_37:
          /*0044*/ 	.word	0x00000030
  
  
  	//   ....[1]....
          /*0048*/ 	.word	0x00000240
  .L_38:
  
  
// --------------------- .nv.rel.action                   --------------------------
	.section	.nv.rel.action,"",@"SHT_CUDA_RELOCINFO"
	.__section_name         0x1d6 	// offset in .shstrtab
	.__section_type         1879048203
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x7e0 	// maybe updated by assembler
	.__section_size         0x10 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      8
	.align                8 	// equivalent to set sh_addralign
  	.align	8
  	.sectionentsize	8
          /*0000*/ 	.byte	0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x25, 0x00, 0x05, 0x36
  
  
// --------------------- .rel.debug_frame                 --------------------------
	.section  ".rel.debug_frame", 0, SHT_REL
	// all relocation sections will be dynamically generated by assembler 
	// but most of the section header will be kept as is.
	.__section_name         0x1b3 	// offset in .shstrtab
	.__section_type         SHT_REL
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x7f0 	// maybe updated by assembler
	.__section_size         0x20 	// maybe updated by assembler
	.__section_link         3
	.__section_info         0x4
	.__section_entsize      16
	.align                8 	// equivalent to set sh_addralign
    // Relocation[0] : _Z13kernelDefault7param_tPi, Container({'r_offset': 180, 'r_info': 51539607554, 'r_info_sym': 12, 'r_info_type': 2})
    // Relocation[1] : _Z16kernelLargeParam13param_large_tPi, Container({'r_offset': 68, 'r_info': 47244640258, 'r_info_sym': 11, 'r_info_type': 2})

// --------------------- .nv.constant3                    --------------------------
	.section	.nv.constant3,"a",@progbits
	.__section_name         0xcc 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x2
	.__section_addr         0x0
	.__section_offset       0x810 	// maybe updated by assembler
	.__section_size         0x28 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  	.type		excess_params,@object
  	.size		excess_params,(.L_0 - excess_params)
  excess_params:
  .nv.constant3:
  	.zero		40
  .L_0:
  
  
// --------------------- .nv.constant0._Z16kernelLargeParam13param_large_tPi --------------------------
	.section	.nv.constant0._Z16kernelLargeParam13param_large_tPi,"a",@progbits
	.__section_name         0xda 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x2
	.__section_addr         0x0
	.__section_offset       0x838 	// maybe updated by assembler
	.__section_size         0x208 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0xd
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  .nv.constant0._Z16kernelLargeParam13param_large_tPi:
  	.zero		520
  
  
// --------------------- .nv.constant0._Z13kernelDefault7param_tPi --------------------------
	.section	.nv.constant0._Z13kernelDefault7param_tPi,"a",@progbits
	.__section_name         0x17c 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x2
	.__section_addr         0x0
	.__section_offset       0xa40 	// maybe updated by assembler
	.__section_size         0x1e0 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0xe
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  .nv.constant0._Z13kernelDefault7param_tPi:
  	.zero		480
  
  
// --------------------- .text._Z16kernelLargeParam13param_large_tPi --------------------------
	.section	.text._Z16kernelLargeParam13param_large_tPi,"ax",@progbits
	.__section_name         0x40 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x6
	.__section_addr         0x0
	.__section_offset       0xc80 	// maybe updated by assembler
	.__section_size         0x500 	// maybe updated by assembler
	.__section_link         3
	.__section_info         0xa00000b
	.__section_entsize      0
	.align                128 	// equivalent to set sh_addralign
  	.sectioninfo	@"SHI_REGISTERS=10"
  	.align	128
          .global         _Z16kernelLargeParam13param_large_tPi
          .type           _Z16kernelLargeParam13param_large_tPi,@function
          .size           _Z16kernelLargeParam13param_large_tPi,(.L_x_5 - _Z16kernelLargeParam13param_large_tPi)
          .other          _Z16kernelLargeParam13param_large_tPi,@"STO_CUDA_ENTRY STV_DEFAULT"
  _Z16kernelLargeParam13param_large_tPi:
  .text._Z16kernelLargeParam13param_large_tPi:
      [B------:R-:W-:Y:S02]         /*0000*/                   IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
      [B------:R-:W0:-:S02]         /*0010*/                   S2R R0, SR_TID.X ;
      [B0-----:R-:W-:Y:S13]         /*0020*/                   LOP3.LUT P0, RZ, R0, 0x1f, RZ, 0xc0, !PT ;
      [B------:R-:W-:-:S05]         /*0030*/               @P0 EXIT ;
      [B------:R-:W-:Y:S02]         /*0040*/                   SHF.R.U32.HI R0, RZ, 0x5, R0 ;
      [B------:R-:W-:Y:S05]         /*0050*/                   CS2R R2, SR_CLOCKLO ;
      [B------:R0:W-:-:S01]         /*0060*/                   STS [RZ], R2 ;
      [B------:R-:W-:-:S01]         /*0070*/                   ISETP.NE.AND P0, PT, R0, RZ, PT ;
      [B------:R-:W-:-:S01]         /*0080*/                   ULDC.64 UR4, c[0x0][0x118] ;
      [B0-----:R-:W-:-:S11]         /*0090*/                   BSSY B0, `(.L_x_0) ;
      [B------:R-:W-:-:S05]         /*00a0*/              @!P0 BRA `(.L_x_1) ;
      [B------:R-:W-:-:S01]         /*0080*/                   ULDC.64 UR6, c[0x0][0x180] ;
      [B------:R-:W-:-:S02]         /*00b0*/                   CS2R R4, SR_CLOCKLO ;
      [B------:R-:W-:-:S04]         /*00c0*/                   IADD3 R3, R2, c[0x0][0x164], RZ ;
      [B------:R-:W-:-:S04]         /*00d0*/                   IADD3 R3, R2, c[0x0][0x16c], R3 ;
      [B------:R-:W-:-:S04]         /*00e0*/                   IADD3 R3, R2, c[0x0][0x174], R3 ;
      [B------:R-:W-:-:S04]         /*00f0*/                   IADD3 R3, R2, c[0x0][0x17c], R3 ;
      [B------:R-:W-:-:S06]         /*0200*/                   CS2R R6, SR_CLOCKLO ;
      [B------:R-:W-:-:S04]         /*0100*/                   IADD3 R3, R2, c[0x0][0x184], R3 ;
      [B------:R-:W-:-:S04]         /*0110*/                   IADD3 R3, R2, c[0x0][0x18c], R3 ;
      [B------:R-:W-:-:S04]         /*0120*/                   IADD3 R3, R2, c[0x0][0x194], R3 ;
      [B------:R-:W-:-:S04]         /*0130*/                   IADD3 R3, R2, c[0x0][0x19c], R3 ;
      [B------:R-:W-:-:S05]         /*0220*/                   BRA `(.L_x_2) ;
  .L_x_1:
      [B------:R-:W-:-:S01]         /*0080*/                   ULDC.64 UR6, c[0x0][0x160] ;
      [B------:R-:W-:-:S02]         /*0230*/                   CS2R R4, SR_CLOCKLO ;
      [B------:R-:W-:-:S04]         /*0240*/                   IADD3 R3, R2, c[0x0][0x160], RZ ;
      [B------:R-:W-:-:S04]         /*0250*/                   IADD3 R3, R2, c[0x0][0x168], R3 ;
      [B------:R-:W-:-:S04]         /*0260*/                   IADD3 R3, R2, c[0x0][0x170], R3 ;
      [B------:R-:W-:-:S04]         /*0270*/                   IADD3 R3, R2, c[0x0][0x178], R3 ;
      [B------:R-:W-:-:S06]         /*0380*/                   CS2R R6, SR_CLOCKLO ;
      [B------:R-:W-:-:S04]         /*0280*/                   IADD3 R3, R2, c[0x0][0x180], R3 ;
      [B------:R-:W-:-:S04]         /*0290*/                   IADD3 R3, R2, c[0x0][0x188], R3 ;
      [B------:R-:W-:-:S04]         /*02a0*/                   IADD3 R3, R2, c[0x0][0x190], R3 ;
      [B------:R-:W-:-:S04]         /*02b0*/                   IADD3 R3, R2, c[0x0][0x198], R3 ;
  .L_x_2:
      [B------:R-:W-:-:S05]         /*03a0*/                   BSYNC B0 ;
  .L_x_0:
      [B------:R-:W-:-:S02]         /*03b0*/                   IMAD.SHL.U32 R2, R0, 0x4, RZ ;
      [B------:R-:W-:Y:S04]         /*03c0*/                   IMAD.MOV.U32 R3, RZ, RZ, 0x4 ;
      [B------:R-:W-:Y:S05]         /*03d0*/                   IMAD.WIDE.U32 R2, R2, R3, c[0x0][0x200] ;
      [B------:R-:W-:-:S04]         /*03e0*/                   STG.E desc[UR4][R2.64], R5 ;
      [B------:R-:W-:-:S04]         /*03f0*/                   STG.E desc[UR4][R2.64+0x4], R4 ;
      [B------:R-:W-:-:S01]         /*0400*/                   STG.E desc[UR4][R2.64+0x8], R6 ;
      [B------:R-:W-:-:S05]         /*0410*/                   EXIT ;
  .L_x_3:
      [B------:R-:W-:Y:S00]         /*0420*/                   BRA `(.L_x_3);
      [B------:R-:W-:Y:S00]         /*0430*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0440*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0450*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0460*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0470*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0480*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0490*/                   NOP;
      [B------:R-:W-:Y:S00]         /*04a0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*04b0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*04c0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*04d0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*04e0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*04f0*/                   NOP;
  .L_x_5:
  
  

// --------------------- .text._Z13kernelDefault7param_tPi --------------------------
	.section	.text._Z13kernelDefault7param_tPi,"ax",@progbits
	.__section_name         0x10e 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x6
	.__section_addr         0x0
	.__section_offset       0x1180 	// maybe updated by assembler
	.__section_size         0x300 	// maybe updated by assembler
	.__section_link         3
	.__section_info         0xc00000c
	.__section_entsize      0
	.align                128 	// equivalent to set sh_addralign
  	.sectioninfo	@"SHI_REGISTERS=12"
  	.align	128
          .global         _Z13kernelDefault7param_tPi
          .type           _Z13kernelDefault7param_tPi,@function
          .size           _Z13kernelDefault7param_tPi,(.L_x_6 - _Z13kernelDefault7param_tPi)
          .other          _Z13kernelDefault7param_tPi,@"STO_CUDA_ENTRY STV_DEFAULT"
  _Z13kernelDefault7param_tPi:
  .text._Z13kernelDefault7param_tPi:
      [B------:R-:W-:Y:S02]         /*0000*/                   IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
      [B------:R-:W0:-:S02]         /*0010*/                   S2R R0, SR_TID.X ;
      [B0-----:R-:W-:Y:S13]         /*0020*/                   LOP3.LUT P0, RZ, R0, 0x1f, RZ, 0xc0, !PT ;
      [B------:R-:W-:-:S05]         /*0030*/               @P0 EXIT ;
      [B------:R-:W-:Y:S02]         /*0040*/                   ULDC.64 UR4, c[0x0][0x118] ;
      [B------:R-:W-:Y:S05]         /*0050*/                   CS2R R4, SR_CLOCKLO ;
      [B------:R0:W-:-:S02]         /*0060*/                   STS [RZ], R4 ;
      [B------:R-:W-:Y:S02]         /*0070*/                   CS2R R2, SR_CLOCKLO ;
      [B------:R-:W-:Y:S04]         /*0080*/                   IADD3 R5, R4, c[0x0][0x160], RZ ;
      [B------:R-:W-:Y:S04]         /*0090*/                   IADD3 R5, R4, c[0x0][0x168], R5 ;
      [B------:R-:W-:Y:S04]         /*00a0*/                   IADD3 R5, R4, c[0x0][0x170], R5 ;
      [B------:R-:W-:Y:S04]         /*00b0*/                   IADD3 R5, R4, c[0x0][0x178], R5 ;
      [B------:R-:W-:Y:S04]         /*00c0*/                   IADD3 R5, R4, c[0x0][0x180], R5 ;
      [B------:R-:W-:Y:S04]         /*00d0*/                   IADD3 R5, R4, c[0x0][0x188], R5 ;
      [B------:R-:W-:Y:S04]         /*00e0*/                   IADD3 R5, R4, c[0x0][0x190], R5 ;
      [B------:R-:W-:Y:S04]         /*00f0*/                   IADD3 R5, R4, c[0x0][0x198], R5 ;
      [B------:R-:W-:Y:S04]         /*0100*/                   IADD3 R5, R4, c[0x0][0x1a0], R5 ;
      [B------:R-:W-:Y:S04]         /*0110*/                   IADD3 R5, R4, c[0x0][0x1a8], R5 ;
      [B------:R-:W-:Y:S04]         /*0120*/                   IADD3 R5, R4, c[0x0][0x1b0], R5 ;
      [B------:R-:W-:Y:S04]         /*0130*/                   IADD3 R5, R4, c[0x0][0x1b8], R5 ;
      [B------:R-:W-:Y:S04]         /*0140*/                   IADD3 R5, R4, c[0x0][0x1c0], R5 ;
      [B------:R-:W-:Y:S04]         /*0150*/                   IADD3 R5, R4, c[0x0][0x1c8], R5 ;
      [B------:R-:W-:Y:S04]         /*0160*/                   IADD3 R5, R4, c[0x0][0x1d0], R5 ;
      [B------:R-:W-:Y:S04]         /*0170*/                   IADD3 R5, R4, c[0x3][0x0], R5 ;
      [B------:R-:W-:Y:S04]         /*0180*/                   IADD3 R5, R4, c[0x3][0x8], R5 ;
      [B------:R-:W-:Y:S04]         /*0190*/                   IADD3 R5, R4, c[0x3][0x10], R5 ;
      [B------:R-:W-:Y:S04]         /*01a0*/                   IADD3 R5, R4, c[0x3][0x18], R5 ;
      [B------:R-:W-:Y:S02]         /*01b0*/                   IADD3 R9, R4, c[0x3][0x20], R5 ;
      [B------:R-:W-:Y:S05]         /*01c0*/                   CS2R R6, SR_CLOCKLO ;
      [B------:R-:W-:-:S01]         /*01d0*/                   SHF.R.U32.HI R0, RZ, 0x3, R0 ;
      [B------:R-:W-:Y:S03]         /*01e0*/                   IMAD.MOV.U32 R5, RZ, RZ, 0x4 ;
      [B------:R-:W-:Y:S05]         /*01f0*/                   LOP3.LUT R0, R0, 0x1ffffffc, RZ, 0xc0, !PT ;
      [B0-----:R-:W-:Y:S05]         /*0200*/                   IMAD.WIDE.U32 R4, R0, R5, c[0x0][0x1d8] ;
      [B------:R-:W-:-:S04]         /*0210*/                   STG.E desc[UR4][R4.64+0x4], R2 ;
      [B------:R-:W-:-:S04]         /*0220*/                   STG.E desc[UR4][R4.64+0x8], R6 ;
      [B------:R-:W-:-:S01]         /*0230*/                   STG.E desc[UR4][R4.64], R9 ;
      [B------:R-:W-:-:S05]         /*0240*/                   EXIT ;
  .L_x_4:
      [B------:R-:W-:Y:S00]         /*0250*/                   BRA `(.L_x_4);
      [B------:R-:W-:Y:S00]         /*0260*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0270*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0280*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0290*/                   NOP;
      [B------:R-:W-:Y:S00]         /*02a0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*02b0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*02c0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*02d0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*02e0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*02f0*/                   NOP;
  .L_x_6:
  
  

// --------------------- .nv.shared._Z16kernelLargeParam13param_large_tPi --------------------------
	.section	.nv.shared._Z16kernelLargeParam13param_large_tPi,"aw",@nobits
	.__section_name         0x9b 	// offset in .shstrtab
	.__section_type         SHT_NOBITS
	.__section_flags        0x3
	.__section_addr         0x0
	.__section_offset       0x1480 	// maybe updated by assembler
	.__section_size         0x4 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0xd
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  .nv.shared._Z16kernelLargeParam13param_large_tPi:
  	.zero		4
  
  
// --------------------- .nv.shared._Z13kernelDefault7param_tPi --------------------------
	.section	.nv.shared._Z13kernelDefault7param_tPi,"aw",@nobits
	.__section_name         0x155 	// offset in .shstrtab
	.__section_type         SHT_NOBITS
	.__section_flags        0x3
	.__section_addr         0x0
	.__section_offset       0x1480 	// maybe updated by assembler
	.__section_size         0x4 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0xe
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  .nv.shared._Z13kernelDefault7param_tPi:
  	.zero		4
  //-------------------------------------------------
  //---------------- END of sections ----------------
  //-------------------------------------------------


// Program segment PT_PHDR, 5 
  .__segment  "PT_PHDR", 5 
  .__segment_offset  0x18c0   		// maybe updated by assembler 
  .__segment_vaddr   0x0   		// Seems always 0? 
  .__segment_paddr   0x0   		// ??? 
  .__segment_filesz  0xe0   		// file size, maybe updated by assembler 
  .__segment_memsz   0xe0   		// file size + nobits sections, maybe updated by assembler 
  .__segment_align     8   		//  

// Program segment PT_LOAD, 5 
  .__segment  "PT_LOAD", 5 
  .__segment_offset  0x810   		// maybe updated by assembler 
  .__segment_vaddr   0x0   		// Seems always 0? 
  .__segment_paddr   0x0   		// ??? 
  .__segment_filesz  0xc70   		// file size, maybe updated by assembler 
  .__segment_memsz   0xc70   		// file size + nobits sections, maybe updated by assembler 
  .__segment_align     8   		//  
  .__segment_startsection    ".nv.constant3"  		// first section in this segment 
  .__segment_endsection      ".text._Z13kernelDefault7param_tPi"  		// last  section in this segment 

// Program segment PT_LOAD, 6 
  .__segment  "PT_LOAD", 6 
  .__segment_offset  0x1480   		// maybe updated by assembler 
  .__segment_vaddr   0x0   		// Seems always 0? 
  .__segment_paddr   0x0   		// ??? 
  .__segment_filesz  0x0   		// file size, maybe updated by assembler 
  .__segment_memsz   0x8   		// file size + nobits sections, maybe updated by assembler 
  .__segment_align     8   		//  
  .__segment_startsection    ".nv.shared._Z16kernelLargeParam13param_large_tPi"  		// first section in this segment 
  .__segment_endsection      ".nv.shared._Z13kernelDefault7param_tPi"  		// last  section in this segment 

// Program segment PT_LOAD, 5 
  .__segment  "PT_LOAD", 5 
  .__segment_offset  0x18c0   		// maybe updated by assembler 
  .__segment_vaddr   0x0   		// Seems always 0? 
  .__segment_paddr   0x0   		// ??? 
  .__segment_filesz  0xe0   		// file size, maybe updated by assembler 
  .__segment_memsz   0xe0   		// file size + nobits sections, maybe updated by assembler 
  .__segment_align     8   		//  
  .__segment_startsection    "@PROGRAM_HEADER"  		// first section in this segment 
  .__segment_endsection      "@PROGRAM_HEADER"  		// last  section in this segment 


  //-------------------------------------------------
  //---------------- END of segments ----------------
  //-------------------------------------------------


